<h1>Gestión de Productos</h1>

<div class="container">
    <!-- Formulario para agregar productos -->
    <form id="add-product-form" class="form" enctype="multipart/form-data">
        <h2>Agregar Nuevo Producto</h2>
        <label>Nombre:</label>
        <input type="text" name="title" required>
        <label>Descripción:</label>
        <textarea name="description" required></textarea>
        <label>Precio:</label>
        <input type="number" name="price" required>
        <label>Stock:</label>
        <input type="number" name="stock" required>
        <label>Categoría:</label>
        <input type="text" name="category" required>
        <label>Adjuntar Imagen:</label>
        <input type="file" name="image">
        <button type="submit">Agregar Producto</button>
    </form>


    <!-- Lista de productos -->
    <h2>Lista de Productos</h2>
    <table class="product-table">
        <thead>
            <tr>
                <th>Imagen</th>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Precio</th>
                <th>Stock</th>
                <th>Categoría</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="product-list">
            <!-- Los productos se cargarán dinámicamente aquí -->
        </tbody>
    </table>
</div>

<style>
    /* Estilos generales */
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f9;
        color: #333;
        margin: 0;
        padding: 0;
    }

    h1, h2 {
        text-align: center;
        color: #4CAF50;
    }

    .container {
        max-width: 1200px;
        margin: 20px auto;
        padding: 20px;
        background: white;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .form {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 30px;
    }

    .form label {
        font-weight: bold;
        color: #333;
    }

    .form input, .form textarea, .form button {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
    }

    .form button {
        background-color: #4CAF50;
        color: white;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s ease;
    }

    .form button:hover {
        background-color: #45a049;
    }

    .product-table {
        width: 100%;
        border-collapse: collapse;
    }

    .product-table th, .product-table td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
    }

    .product-table th {
        background-color: #4CAF50;
        color: white;
    }

    .product-table tr:hover {
        background-color: #f4f4f9;
    }

    .product-table img {
        width: 50px;
        height: auto;
    }

    .product-table button {
        background-color: #ff4d4d;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .product-table button:hover {
        background-color: #e60000;
    }
</style>

<script>
    const form = document.getElementById('add-product-form');
    const productList = document.getElementById('product-list');

    // Cargar productos
    async function loadProducts() {
        const res = await fetch('/api/products');
        const products = await res.json();
        productList.innerHTML = '';
        products.forEach(p => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>
                    <img src="${p.thumbnails[0] || '/images/default.jpg'}" alt="${p.title}" style="width: 50px; height: auto;">
                </td>
                <td>${p.title}</td>
                <td>${p.description}</td>
                <td>$${p.price}</td>
                <td>${p.stock}</td>
                <td>${p.category}</td>
                <td><button onclick="deleteProduct('${p.id}')">Eliminar</button></td>
            `;
            productList.appendChild(row);
        });
    }

    // Agregar producto
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);

        // Enviar los datos como FormData
        await fetch('/api/products', {
            method: 'POST',
            body: formData,
        });

        form.reset();
        loadProducts();
    });


    // Eliminar producto
    async function deleteProduct(id) {
        await fetch(`/api/products/${id}`, { method: 'DELETE' });
        loadProducts();
    }

    // Cargar productos al cargar la página
    loadProducts();
</script>
